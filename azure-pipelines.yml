variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  vmPool: 'windows-latest'

name: $(BuildID) - $(buildName)

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - CHANGELOG.md
      - docs/*

      
stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: BuildPlatform
        displayName: Build Platform
        pool:
          vmImage: $(vmPool)

        steps:
           - task: DotNetCoreCLI@2
            displayName: Dotnet build
            inputs:
              command: build
              projects: 'Enterspeed.Cli.sln'
              arguments: '--configuration Release /p:Version=$(semVersion)'

          - task: DotNetCoreCLI@2
            displayName: Dotnet test
            inputs:
              command: test
              arguments: '--no-build --configuration Release'

          - task: DotNetCoreCLI@2
            displayName: 'dotnet publish'
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: '**/*.csproj'
              arguments: '-o $(Build.ArtifactStagingDirectory)/Output'
              modifyOutputPath: true

  - stage: Release on Github
    displayname: 
    jobs:
      - job:
        displayname: 
        pool:
          vmImage: $(vmPool)
        
        steps:
          - task: GitHubRelease@1
            inputs:
              gitHubConnection: # string. Required. GitHub connection (OAuth or PAT). 
              repositoryName: '$(Build.Repository.Name)'
              action: 'create'
              #target: '$(Build.SourceVersion)' # string. Required when action = create || action = edit. Target. Default: $(Build.SourceVersion).
              tagSource: 'gitTag'
              #tagPattern: # string. Optional. Use when tagSource = gitTag. Tag Pattern. 
              #tag: # string. Required when action = edit || action = delete || tagSource = userSpecifiedTag. Tag. 
              #title: # string. Optional. Use when action = create || action = edit. Release title. 
              #releaseNotesSource: 'filePath' # 'filePath' | 'inline'. Optional. Use when action = create || action = edit. Release notes source. Default: filePath.
              #releaseNotesFilePath: # string. Optional. Use when releaseNotesSource = filePath. Release notes file path. 
              #releaseNotesInline: # string. Optional. Use when releaseNotesSource = inline. Release notes. 
              assets: '$(Build.ArtifactStagingDirectory)/*' # string. Optional. Use when action = create || action = edit. Assets. Default: $(Build.ArtifactStagingDirectory)/*.
              #assetUploadMode: 'delete' # 'delete' | 'replace'. Optional. Use when action = edit. Asset upload mode. Default: delete.
              #isDraft: false # boolean. Optional. Use when action = create || action = edit. Draft release. Default: false.
              #isPreRelease: false # boolean. Optional. Use when action = create || action = edit. Pre-release. Default: false.
              #addChangeLog: true # boolean. Optional. Use when action = create || action = edit. Add changelog. Default: true.
              # Changelog configuration
              changeLogCompareToRelease: 'lastFullRelease' # 'lastFullRelease' | 'lastNonDraftRelease' | 'lastNonDraftReleaseByTag'. Required when addChangeLog = true. Compare to. Default: lastFullRelease.
              #changeLogCompareToReleaseTag: # string. Required when changeLogCompareToRelease = lastNonDraftReleaseByTag. Release Tag. 
              changeLogType: 'commitBased' # 'commitBased' | 'issueBased'. Required when addChangeLog = true. Changelog type. Default: commitBased.
              #changeLogLabels: '[{ "label" : "bug", "displayName" : "Bugs", "state" : "closed" }]' # string. Optional. Use when changeLogType = issueBased. Categories. Default: [{ "label" : "bug", "displayName" : "Bugs", "state" : "closed" }].
